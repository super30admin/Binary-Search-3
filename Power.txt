# Time - O(logn)
# Space - O(logn) recursive stack

class Solution:
    def myPow(self, x: float, n: int) -> float:
        if n < 0:
            return 1/self.helper(x, -n)
        else:
            return self.helper(x, n)
        
    def helper(self, x, n):
        if n == 0:
            return 1
        if n%2 == 0:
            return self.helper(x, n/2)**2
        else:
            return x * self.helper(x, n-1)