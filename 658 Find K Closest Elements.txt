//658. Find K Closest Elements

//Time Complexity:O(log(n-k))
//Space Complexity:O(1)
class Solution {
    public List<Integer> findClosestElements(int[] arr, int k, int x) {
        List<Integer>result=new ArrayList<>();
        int l=0;
        int r=arr.length-k;
        while(l<r){
            int mid=l+(r-l)/2;
            int disL=x-arr[mid];
            int disR=arr[mid+k]-x;
            if(disL>disR){
                l=mid+1;
            }else{
                r=mid;
            }
        }  


        for(int i=l;i<l+k;i++){
            result.add(arr[i]);
        }
        return result;

    }
}

/*//TC=O(n) SC=O(K)
class Solution {
    public List<Integer> findClosestElements(int[] arr, int k, int x) {
        List<Integer>result=new ArrayList<>();
        int l=0;
        int r=arr.length-1;
        while(r-l+1 > k){
            
            int disL=Math.abs(arr[l] - x);
            int disR=Math.abs(arr[r] - x);
            if(disL>disR){
                l++;
            }else{
                r--;
            }
        }
        for(int i=l;i<=r;i++){
            result.add(arr[i]);
        }
        return result;

    }
}*/